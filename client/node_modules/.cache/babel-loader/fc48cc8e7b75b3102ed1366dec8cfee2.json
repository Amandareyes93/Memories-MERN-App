{"ast":null,"code":"import * as api from '../api/index';\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nexport const getPostAsync = createAsyncThunk('posts/getPosts', async () => {\n  const {\n    data\n  } = await api.fetchPosts();\n  return data;\n});\nexport const postsSlice = createSlice({\n  name: 'posts',\n  initialState: {\n    isLoading: false,\n    value: []\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(getPostAsync.pending, state => {\n      debugger;\n      state.isLoading = true;\n    }).addCase(getPostAsync.fulfilled, (state, action) => {\n      debugger;\n      state.isLoading = false;\n      state.value = [{\n        pepe: 'hola'\n      }];\n    });\n  }\n});\n\n// Action creators are generated for each case reducer function\nexport const {} = postsSlice.actions;\nexport default postsSlice.reducer;","map":{"version":3,"names":["api","createAsyncThunk","createSlice","getPostAsync","data","fetchPosts","postsSlice","name","initialState","isLoading","value","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","pepe","actions","reducer"],"sources":["C:/Users/amand/Documents/Projects/MERN-Memories-App/MERN-Memories-App-Amanda/clientv/src/store/posts.js"],"sourcesContent":["import * as api from '../api/index';\r\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\n\r\n\r\nexport const getPostAsync = createAsyncThunk(\r\n  'posts/getPosts',\r\n  async () => {\r\n    const {data} = await api.fetchPosts();\r\n    return data;\r\n  }\r\n);\r\nexport const postsSlice = createSlice({\r\n  name: 'posts',\r\n  initialState: {\r\n    isLoading: false,\r\n    value: [],\r\n  },\r\n  reducers: {\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(getPostAsync.pending, (state) => {\r\n        debugger\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(getPostAsync.fulfilled, (state, action) => {\r\n        debugger\r\n        state.isLoading = false;\r\n        state.value = [{pepe: 'hola'}];\r\n      });\r\n  },\r\n});\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const {  } = postsSlice.actions;\r\n\r\nexport default postsSlice.reducer;\r\n"],"mappings":"AAAA,OAAO,KAAKA,GAAG,MAAM,cAAc;AACnC,SAASC,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAGhE,OAAO,MAAMC,YAAY,GAAGF,gBAAgB,CAC1C,gBAAgB,EAChB,YAAY;EACV,MAAM;IAACG;EAAI,CAAC,GAAG,MAAMJ,GAAG,CAACK,UAAU,EAAE;EACrC,OAAOD,IAAI;AACb,CAAC,CACF;AACD,OAAO,MAAME,UAAU,GAAGJ,WAAW,CAAC;EACpCK,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE;IACZC,SAAS,EAAE,KAAK;IAChBC,KAAK,EAAE;EACT,CAAC;EACDC,QAAQ,EAAE,CACV,CAAC;EACDC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACX,YAAY,CAACY,OAAO,EAAGC,KAAK,IAAK;MACxC;MACAA,KAAK,CAACP,SAAS,GAAG,IAAI;IACxB,CAAC,CAAC,CACDK,OAAO,CAACX,YAAY,CAACc,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAClD;MACAF,KAAK,CAACP,SAAS,GAAG,KAAK;MACvBO,KAAK,CAACN,KAAK,GAAG,CAAC;QAACS,IAAI,EAAE;MAAM,CAAC,CAAC;IAChC,CAAC,CAAC;EACN;AACF,CAAC,CAAC;;AAEF;AACA,OAAO,MAAM,CAAG,CAAC,GAAGb,UAAU,CAACc,OAAO;AAEtC,eAAed,UAAU,CAACe,OAAO"},"metadata":{},"sourceType":"module"}